from app.common.repository.user_repository import UserRepository
from app.common.repository.project_repository import ProjectRepository
from app.common.repository.uni_repository import UniRepository
from app.common.repository.filter_repository import FilterRepository
from app.common.models.invite import Invite
from app.common.models.request import Request

# --------------------- PROFILE ---------------------

async def get_profile_card(telegram_id: int):
    user = await UserRepository.get_card_info_by_telegram_id(telegram_id=telegram_id)
            
    description = f"–ò–º—è: {user.name}\n–£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç: {user.short_name}\n–°—Ñ–µ—Ä–∞ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏: {user.topic}\n–°—Ç–∞—Ç—É—Å –∞–∫–∫–∞—É–Ω—Ç–∞: {'Premium' if user.is_premium else '–û–±—ã—á–Ω—ã–π'}\n\n–û —Å–µ–±–µ: {user.info}\n\n–ù–∞–≤—ã–∫–∏: {user.skills}"
    
    return {'description': description, 'photo': user.image}


# --------------------- PROJECT ---------------------

async def get_project_card(project_id: int):
    project = await ProjectRepository.get_one_or_none(id=project_id)
    
    description = f"–ù–∞–∑–≤–∞–Ω–∏–µ: {project.name}\n–°—Ñ–µ—Ä–∞ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏: {project.topic}\n\n–û –ø—Ä–æ–µ–∫—Ç–µ: {project.info}\n\n–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è: {project.requirements}"
    
    return {'description': description, 'photo': project.image}


# --------------------- INVITE ---------------------

async def get_invite_card(invite: Invite):
    project = await ProjectRepository.get_one_or_none(id=invite.project_id)
    user = await UserRepository.get_by_id(model_id=project.user_id)
    uni = await UniRepository.get_by_id(model_id=project.uni_id)
    
    if not user:
        return
    
    description = f"–î–ª—è —Å–≤—è–∑–∏: @{user.username}\n\n–ù–∞–∑–≤–∞–Ω–∏–µ: {project.name}\n–£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç: {uni.short_name}\n–°—Ñ–µ—Ä–∞ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏: {project.topic}\n\n–û –ø—Ä–æ–µ–∫—Ç–µ: {project.info}\n\n–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è: {project.requirements}"
    
    return {'description': description, 'photo': project.image}


# --------------------- REQUEST ---------------------

async def get_request_card(request: Request):
    user = await UserRepository.get_by_id(model_id=request.user_id)
    project = await ProjectRepository.get_one_or_none(id=request.project_id)
    uni = await UniRepository.get_by_id(model_id=project.uni_id)
    
    if not user:
        return
    
    description = f"–î–ª—è —Å–≤—è–∑–∏: @{user.username}\n\n–ò–º—è: {user.name}\n–£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç: {uni.short_name}\n–°—Ñ–µ—Ä–∞ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏: {user.topic}\n–°—Ç–∞—Ç—É—Å –∞–∫–∫–∞—É–Ω—Ç–∞: {'Premium' if user.is_premium else '–û–±—ã—á–Ω—ã–π'}\n\n–û —Å–µ–±–µ: {user.info}\n\n–ù–∞–≤—ã–∫–∏: {user.skills}"
    
    return {'description': description, 'photo': user.image}


# --------------------- SEARCH SETTINGS ---------------------


async def get_search_settings_card(telegram_id: int):
    filter = await FilterRepository.get_one_or_none(telegram_id=telegram_id)
    
    profile_filter_uni = await UniRepository.get_by_id(model_id=filter.profile_uni_id)
    project_filter_uni = await UniRepository.get_by_id(model_id=filter.project_uni_id)
    
    description = f"‚öôÔ∏è–ü–û–ò–°–ö –ü–û –ü–†–û–§–ò–õ–Ø–ú‚öôÔ∏è\n\n–£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç: <b>{profile_filter_uni.short_name}</b>\n–°—Ñ–µ—Ä–∞: <b>{filter.profile_topic}</b>\n\n\n‚öôÔ∏è–ü–û–ò–°–ö –ü–û –ü–†–û–ï–ö–¢–ê–ú‚öôÔ∏è\n\n–£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç: <b>{project_filter_uni.short_name}</b>\n–°—Ñ–µ—Ä–∞: <b>{filter.project_topic}</b>\n\n{'„Ä∞Ô∏è' * 15}\n\nüîΩ–ò–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ãüîΩ"
    
    return {'description': description}


# --------------------- ADMIN STATISTICS ---------------------


async def get_admin_statistics_card():
    users = await UserRepository.get_all()
    projects = await ProjectRepository.get_all()
    authorized_users = len([user for user in users if user.is_authorized])
    banned_users = len([user for user in users if user.is_banned])
    banned_projects = len([project for project in projects if project.is_banned])
    vip_users = len([user for user in users if user.is_premium])
    
    description = f"–ö–æ–ª-–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(users)}\n–ö–æ–ª-–≤–æ –ø—Ä–æ–µ–∫—Ç–æ–≤: {len(projects)}\n–ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ãe –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: {authorized_users}\n–ó–∞–±–∞–Ω–µ–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: {banned_users}\nPremium –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: {vip_users}\n–ó–∞–±–∞–Ω–Ω–µ–Ω–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã: {banned_projects}"
    
    return description